% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_helpers.R
\name{snap_to_mongo}
\alias{snap_to_mongo}
\title{Append to or replace data in a MongoDB collection}
\usage{
snap_to_mongo(
  snap_url,
  headers = character(0),
  query = character(0),
  mongo_url,
  db,
  collection,
  replace = TRUE
)
}
\arguments{
\item{snap_url}{URL of SNAP server}

\item{headers}{A named character vector of header keys and values. This allows
for the `X-USERNAME` and `X-API-KEY` headers to be set for SNAP  authentication.}

\item{query}{A named list of query params and values. This allows the
`restrictedValues` param to be set.}

\item{db}{Name of the database the collection is in.}

\item{collection}{Name of the collection.}

\item{replace}{Default is FALSE. When TRUE, all documents are dropped in the
collection first, effectively overwriting it.}

\item{connection_string}{Address of the MongoDB server in mongo connection
string [URI
format](https://docs.mongodb.com/manual/reference/connection-string/).}
}
\value{
Returns all data in the given collection (after update) as a dataframe.
}
\description{
Append data to a MongoDB collection, optionally overwriting it.
  If the collection and/or database do not exist, they will be created.
}
\examples{
\dontrun{
# Append the data taken from SNAP survey with ID 123-456 to my_collection
# (in the my_db database). Set `replace = FALSE` to instead overwrite it.
send_to_mongo(
  glue(SNAP_URL, SURVEY_ID = "123-456"),
  c(
    'X-USERNAME' = SNAP_USER,
    'X-API-KEY'  = SNAP_API_KEY
  ),
  mongo_url = glue(
    "mongodb+srv://{MONGO_USER}:{MONGO_PASS}@{MONGO_HOST}",
    "/?tls=true&retryWrites=true&w=majority"
  ),
  "my_db",
  "my_collection",
  replace = FALSE
)
}
}
